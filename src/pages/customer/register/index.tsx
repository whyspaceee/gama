import { getServerSession } from "next-auth";
import Head from "next/head";
import { useEffect, useState } from "react";
import CustomerBasicInformation from "../../../components/customer/register/BasicInformation";
import OTP from "../../../components/customer/register/OTP";
import { authOptions } from "../../../server/auth";

export async function getServerSideProps(context: { req: any; res: any }) {
  const session = await getServerSession(context.req, context.res, authOptions);

  if (!session) {
    return {
      redirect: {
        destination: "/login?callbackUrl=/customer",
        permanent: false,
      },
    };
  }

  if (session.user.customerId) {
    return {
      redirect: {
        destination: "/customer",
        permanent: false,
      },
    };
  }

  return {
    props: {
      session,
    },
  };
}

export default function UserRegister() {
  const [formData, setFormData] = useState<{
    name: string;
    number: string;
  }>();
  const [activeIndex, setActiveIndex] = useState(0);
  const [tempNumber, setTempNumber] = useState("");

  useEffect(() => {
    (formData);
  }, []);

  return (
    <>
      <Head>
        <title>Register</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" ref="/favicon.ico" />
      </Head>
      {
        {
          0: (
            <CustomerBasicInformation
              phoneNumber={tempNumber}
              setPhoneNumber={setTempNumber}
              setFormData={setFormData}
              formData={formData}
              setActiveIndex={setActiveIndex}
            />
          ),
          1: (
            <OTP
              formData={formData}
              setActiveIndex={setActiveIndex}
              setFormData={setFormData}
              number={tempNumber}
            />
          ),
        }[activeIndex]
      }
    </>
  );
}
